{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Models(props) {\n  _s();\n\n  const [modelsList, setModelsList] = useState([]);\n  const [currentModel, setCurrentModel] = useState();\n\n  const getBackgroundColor = status => status === 'ready' ? 'green' : 'red';\n\n  const getBorderColor = modelId => modelId === currentModel ? 'black' : 'white';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n      height: 500,\n      width: 300,\n      itemSize: 130,\n      itemCount: modelsList.length,\n      children: itemProps => {\n        const {\n          index,\n          style\n        } = itemProps;\n        const model = modelsList[index];\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          style: style,\n          onClick: () => setCurrentModel(model.modelId),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Model ID: ${model.modelId}\\nUpload time: ${model.uploadTime}\\nStatus: ${model.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Models, \"4I4gbfRXvvMMSJK1LissxVnXcQo=\");\n\n_c = Models;\n\nvar _c;\n\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","ListItem","ListItemText","FixedSizeList","Models","props","modelsList","setModelsList","currentModel","setCurrentModel","getBackgroundColor","status","getBorderColor","modelId","length","itemProps","index","style","model","uploadTime"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;;AAIA,QAAMW,kBAAkB,GAAGC,MAAM,IAAKA,MAAM,KAAK,OAAX,GAAqB,OAArB,GAA+B,KAArE;;AACA,QAAMC,cAAc,GAAGC,OAAO,IAAKA,OAAO,KAAKL,YAAZ,GAA2B,OAA3B,GAAqC,OAAxE;;AAEA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,GAAvB;AAA4B,MAAA,KAAK,EAAE,GAAnC;AAAwC,MAAA,QAAQ,EAAE,GAAlD;AAAuD,MAAA,SAAS,EAAEF,UAAU,CAACQ,MAA7E;AAAA,gBACKC,SAAS,IAAI;AACV,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBF,SAAzB;AACA,cAAMG,KAAK,GAAGZ,UAAU,CAACU,KAAD,CAAxB;AAEA,4BACI,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,KAAK,EAAEC,KAAxB;AAA2C,UAAA,OAAO,EAAE,MAAMR,eAAe,CAACS,KAAK,CAACL,OAAP,CAAzE;AAAA,iCACI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAG,aAAYK,KAAK,CAACL,OAAQ,kBAAiBK,KAAK,CAACC,UAAW,aAAYD,KAAK,CAACP,MAAO;AAA7G;AAAA;AAAA;AAAA;AAAA;AADJ,WAAoCK,KAApC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;AAVL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA1BuBZ,M;;KAAAA,M","sourcesContent":["import {useState, useEffect} from 'react';\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\n\nexport default function Models(props) {\n\n    const [modelsList, setModelsList] = useState([]);\n    const [currentModel, setCurrentModel] = useState();\n\n    \n    \n    const getBackgroundColor = status => (status === 'ready' ? 'green' : 'red');\n    const getBorderColor = modelId => (modelId === currentModel ? 'black' : 'white');\n\n    return (\n        <div>\n            <FixedSizeList height={500} width={300} itemSize={130} itemCount={modelsList.length}>\n                {itemProps => {\n                    const { index, style } = itemProps;\n                    const model = modelsList[index];\n                \n                    return (\n                        <ListItem button style={style} key={index} onClick={() => setCurrentModel(model.modelId)}>\n                            <ListItemText primary={`Model ID: ${model.modelId}\\nUpload time: ${model.uploadTime}\\nStatus: ${model.status}`} />\n                        </ListItem>\n                    );\n                }}\n            </FixedSizeList>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}