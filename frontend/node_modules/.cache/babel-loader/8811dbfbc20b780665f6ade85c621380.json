{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Models(props) {\n  _s();\n\n  const [modelsList, setModelsList] = useState();\n  useEffect(() => fetch('/api/models').then(respone => respone.json()).then(json => setModelsList(json)));\n\n  const getColor = status => status === 'ready' ? 'green' : 'red';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: modelsList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        listStyleType: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getColor(item.status),\n          padding: 20,\n          width: 250,\n          height: 50,\n          border: 20,\n          borderRadius: 25\n        },\n        onClick: props.onModelSelect,\n        children: [item.uploadTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this), item.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Models, \"ZdW0UFJRs8gAybdH4T90HEakT24=\");\n\n_c = Models;\nexport default Models;\n\nvar _c;\n\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","Models","props","modelsList","setModelsList","fetch","then","respone","json","getColor","status","map","item","listStyleType","backgroundColor","padding","width","height","border","borderRadius","onModelSelect","uploadTime"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,EAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAMK,KAAK,CAAC,aAAD,CAAL,CACXC,IADW,CACNC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADL,EAEXF,IAFW,CAENE,IAAI,IAAIJ,aAAa,CAACI,IAAD,CAFf,CAAP,CAAT;;AAIA,QAAMC,QAAQ,GAAGC,MAAM,IAAKA,MAAM,KAAK,OAAX,GAAqB,OAArB,GAA+B,KAA3D;;AAEA,sBACI;AAAA,cACCP,UAAU,CAACQ,GAAX,CAAeC,IAAI,iBAChB;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAX;AAAA,8BACI;AACA,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAEL,QAAQ,CAACG,IAAI,CAACF,MAAN,CAA1B;AAAyCK,UAAAA,OAAO,EAAE,EAAlD;AAAsDC,UAAAA,KAAK,EAAE,GAA7D;AAAkEC,UAAAA,MAAM,EAAE,EAA1E;AAA8EC,UAAAA,MAAM,EAAE,EAAtF;AAA0FC,UAAAA,YAAY,EAAE;AAAxG,SADP;AAEA,QAAA,OAAO,EAAEjB,KAAK,CAACkB,aAFf;AAAA,mBAGKR,IAAI,CAACS,UAHV,eAIQ;AAAA;AAAA;AAAA;AAAA,gBAJR,EAKKT,IAAI,CAACF,MALV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA1BQT,M;;KAAAA,M;AA4BT,eAAeA,MAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nfunction Models(props) {\n\n    const [modelsList, setModelsList] = useState();\n\n    useEffect(() => fetch('/api/models')\n        .then(respone => respone.json())\n        .then(json => setModelsList(json)));\n    \n    const getColor = status => (status === 'ready' ? 'green' : 'red');\n\n    return (\n        <div>\n        {modelsList.map(item => (\n            <li style={{listStyleType: 'none'}}>\n                <div\n                style={{backgroundColor: getColor(item.status), padding: 20, width: 250, height: 50, border: 20, borderRadius: 25}}\n                onClick={props.onModelSelect}>\n                    {item.uploadTime}\n                        <br />\n                    {item.status}\n                </div>\n                <br />\n            </li>\n        ))}\n        </div>\n    )\n}\n\nexport default Models"]},"metadata":{},"sourceType":"module"}