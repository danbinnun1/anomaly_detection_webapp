{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport FileUploadBox from './FileUploadBox';\n\nconst convertToJSON = file => {\n  var reader = new FileReader();\n\n  reader.onload = () => {\n    var lines = reader.result.split(\"\\n\");\n    var result = [];\n    var headers = lines[0].split(\",\");\n\n    for (var i = 1; i < lines.length; ++i) {\n      var obj = {};\n      var currentline = lines[i].split(\",\");\n\n      for (var j = 0; j < headers.length; ++j) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n    }\n\n    return JSON.stringify(result);\n  };\n\n  reader.readAsText(file);\n};\n\nimport Models from './Models';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      models: []\n    };\n  }\n\n  async componentDidMount() {\n    const modelsResponse = await fetch(\"/api/models\");\n    this.setState({\n      models: await modelsResponse.json()\n    }); //this.state.models = await modelsResponse.json();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Models, {\n      models: this.state.models\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["FileUploadBox","convertToJSON","file","reader","FileReader","onload","lines","result","split","headers","i","length","obj","currentline","j","push","JSON","stringify","readAsText","Models","Component","App","state","models","componentDidMount","modelsResponse","fetch","setState","json","render"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,GAAGC,IAAI,IAAI;AAC5B,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AACpB,QAAIC,KAAK,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoB,IAApB,CAAZ;AACA,QAAID,MAAM,GAAG,EAAb;AAEA,QAAIE,OAAO,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,GAAf,CAAd;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkC,EAAED,CAApC,EAAsC;AAEpC,UAAIE,GAAG,GAAG,EAAV;AACA,UAAIC,WAAW,GAAGP,KAAK,CAACI,CAAD,CAAL,CAASF,KAAT,CAAe,GAAf,CAAlB;;AAEA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACE,MAA5B,EAAoC,EAAEG,CAAtC,EAAyC;AACvCF,QAAAA,GAAG,CAACH,OAAO,CAACK,CAAD,CAAR,CAAH,GAAkBD,WAAW,CAACC,CAAD,CAA7B;AACD;;AAEDP,MAAAA,MAAM,CAACQ,IAAP,CAAYH,GAAZ;AACD;;AAED,WAAOI,IAAI,CAACC,SAAL,CAAeV,MAAf,CAAP;AACD,GAnBD;;AAqBAJ,EAAAA,MAAM,CAACe,UAAP,CAAkBhB,IAAlB;AACD,CAzBD;;AA2BA,OAAOiB,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,MAAM,EAAE;AADF,KADkB;AAAA;;AAIH,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,aAAD,CAAlC;AACA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAE,MAAME,cAAc,CAACG,IAAf;AAAf,KAAd,EAFwB,CAGxB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAbyB;;AAiB5B,eAAeF,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport FileUploadBox from './FileUploadBox';\n\nconst convertToJSON = file => {\n  var reader = new FileReader();\n\n  reader.onload = () => {\n    var lines = reader.result.split(\"\\n\");\n    var result = [];\n  \n    var headers = lines[0].split(\",\");\n  \n    for (var i = 1; i < lines.length; ++i){\n  \n      var obj = {};\n      var currentline = lines[i].split(\",\");\n  \n      for (var j = 0; j < headers.length; ++j) {\n        obj[headers[j]] = currentline[j];\n      }\n  \n      result.push(obj);\n    }\n\n    return JSON.stringify(result);\n  }\n\n  reader.readAsText(file);\n}\n\nimport Models from './Models'\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    models: []\n  };\n  async componentDidMount() {\n    const modelsResponse = await fetch(\"/api/models\");\n    this.setState({models: await modelsResponse.json()})\n    //this.state.models = await modelsResponse.json();\n  }\n  render() {\n    return (\n      <Models models={this.state.models}></Models>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}