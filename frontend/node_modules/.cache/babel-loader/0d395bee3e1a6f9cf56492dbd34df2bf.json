{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/FileUploadBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nfunction FileUploadBox(props) {\n  _s();\n\n  const [currentFile, setCurrentFile] = useState();\n\n  const changeHandler = event => {\n    setCurrentFile(event.target.files[0]);\n  };\n\n  const onSubmission = () => {\n    if (currentFile != undefined) {\n      props.onUpload(currentFile);\n      currentFile = undefined;\n    } else {// there isnt a file to upload\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      onChange: changeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmission,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUploadBox, \"UgCfYA6miyGCdUCYy11rZpRZNEQ=\");\n\n_c = FileUploadBox;\nexport default FileUploadBox;\nimport csv from 'csv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst onUpload = file => {\n  var reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {};\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadBox\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/FileUploadBox.js"],"names":["React","useState","FileUploadBox","props","currentFile","setCurrentFile","changeHandler","event","target","files","onSubmission","undefined","onUpload","csv","file","reader","FileReader","readAsText","onload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,EAA9C;;AAEA,QAAMK,aAAa,GAAIC,KAAD,IAAW;AAC7BF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAd;AACH,GAFD;;AAGA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIN,WAAW,IAAIO,SAAnB,EAA8B;AAC1BR,MAAAA,KAAK,CAACS,QAAN,CAAeR,WAAf;AACAA,MAAAA,WAAW,GAAGO,SAAd;AACH,KAHD,MAIK,CACD;AACH;AACJ,GARD;;AAUA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAEL;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEI,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAxBQR,a;;KAAAA,a;AA0BT,eAAeA,aAAf;AAEA,OAAOW,GAAP,MAAgB,KAAhB;;;AAEA,MAAMD,QAAQ,GAAGE,IAAI,IAAI;AACrB,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,EAAAA,MAAM,CAACE,UAAP,CAAkBH,IAAlB;;AAEAC,EAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM,CAErB,CAFD;AAGH,CAPD","sourcesContent":["import React, {useState} from 'react'\n\nfunction FileUploadBox(props) {\n    const [currentFile, setCurrentFile] = useState();\n\n    const changeHandler = (event) => {\n        setCurrentFile(event.target.files[0]);\n    }\n    const onSubmission = () => {\n        if (currentFile != undefined) {\n            props.onUpload(currentFile);\n            currentFile = undefined;\n        }\n        else {\n            // there isnt a file to upload\n        }\n    }\n\n    return (\n        <div>\n            <input type=\"file\" name=\"file\" onChange={changeHandler} />\n            <div>\n                <button onClick={onSubmission}>Submit</button>\n            </div>\n        </div>\n    )\n}\n\nexport default FileUploadBox\n\nimport csv from 'csv'\n\nconst onUpload = file => {\n    var reader = new FileReader();\n    reader.readAsText(file);\n\n    reader.onload = () => {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}