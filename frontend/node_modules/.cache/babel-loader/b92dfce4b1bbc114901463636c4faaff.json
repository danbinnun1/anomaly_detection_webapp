{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{convertJSONToLines}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Table(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];var getKeys=function getKeys(data){if(data===undefined||data.length===0){return[];}return data[0];};var table={borderRadius:\"30px\",fontSize:\"20px\",fontWeight:\"normal\",border:\"none\",borderCollapse:\"collapse\",width:\"100%\",maxWidth:\"100%\",whiteSpace:\"nowrap\",backgroundColor:\"white\",borderSpacing:\"10px\",textAlign:\"center\",columnWidth:\"100px\"};var thead={color:\"#ffffff\",background:\"#000000\"};var tbody={color:\"#000000\",background:\"ffffff\"};var getHeader=function getHeader(data){var keys=getKeys(data);return keys.map(function(key,index){return/*#__PURE__*/_jsx(\"th\",{children:key.toUpperCase()},key);});};var getColor=function getColor(row,col,data){if(props.anomalies===undefined){return'white';}var key=getKeys(data)[col];var _iterator=_createForOfIteratorHelper(props.anomalies[key]),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var span=_step.value;if(row>=span.start&&row<=span.end){return'red';}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return'green';};var RenderRow=function RenderRow(row,rowIndex,data){return row.map(function(key,index){return/*#__PURE__*/_jsx(\"td\",{style:{backgroundColor:getColor(rowIndex,index,data)},children:key});});};var getRowsData=function getRowsData(data){return data.slice(1).map(function(row,index){return/*#__PURE__*/_jsx(\"tr\",{children:RenderRow(row,index,data)},index);});};if(props.data===undefined){return null;}if(!result||result.length==0){setTimeout(function(){var data=convertJSONToLines(props.data);setResult(/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"table\",{style:table,cellpadding:\"10\",children:[/*#__PURE__*/_jsx(\"thead\",{style:thead,children:/*#__PURE__*/_jsx(\"tr\",{children:getHeader(data)})}),/*#__PURE__*/_jsx(\"tbody\",{style:tbody,children:getRowsData(data)})]})}));},1);return/*#__PURE__*/_jsx(\"h1\",{children:\"loading...\"});}return result;}","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Table.js"],"names":["React","useState","convertJSONToLines","Table","props","result","setResult","getKeys","data","undefined","length","table","borderRadius","fontSize","fontWeight","border","borderCollapse","width","maxWidth","whiteSpace","backgroundColor","borderSpacing","textAlign","columnWidth","thead","color","background","tbody","getHeader","keys","map","key","index","toUpperCase","getColor","row","col","anomalies","span","start","end","RenderRow","rowIndex","getRowsData","slice","setTimeout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { convertJSONToLines } from './utils';\n\n\nexport default function Table(props) {\n    const [result,setResult]=useState();\n    const getKeys = (data) => {\n        if (data === undefined || data.length === 0) {\n            return [];\n        }\n        \n        return data[0];\n    }\n\n    const table = {\n        borderRadius: \"30px\",\n        fontSize: \"20px\",\n        fontWeight: \"normal\",\n        border: \"none\",\n        borderCollapse: \"collapse\",\n        width: \"100%\",\n        maxWidth: \"100%\",\n        whiteSpace: \"nowrap\",\n        backgroundColor: \"white\",\n        borderSpacing: \"10px\",\n        textAlign: \"center\",\n        columnWidth: \"100px\"\n    };\n\n    const thead = {\n        color: \"#ffffff\",\n        background: \"#000000\",\n    };\n    const tbody = {\n        color: \"#000000\",\n        background: \"ffffff\",\n    };\n\n    const getHeader = (data) => {\n        var keys = getKeys(data);\n        return keys.map((key, index) => {\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n\n    const getColor=(row,col,data)=>{\n        if (props.anomalies===undefined){\n            return 'white';\n        }\n        let key=getKeys(data)[col];\n        for (let span of props.anomalies[key]){\n            if (row>=span.start&&row<=span.end){\n                return 'red';\n            }\n        }\n        return 'green';\n    }\n\n    const RenderRow = (row, rowIndex,data) => {\n        return row.map((key, index) => {\n            return <td style={{backgroundColor: getColor(rowIndex,index,data)}} >{key}</td>\n        })\n    }\n\n    const getRowsData = (data) => {\n        return data.slice(1).map((row, index) => {\n            return <tr key={index}>\n                {RenderRow(row,index,data)}\n            </tr>\n        })\n    }\n    if (props.data===undefined){\n        return null;\n    }\n    if (!result||result.length==0){\n        setTimeout(() => {\n            const data=convertJSONToLines(props.data);\n            setResult(<div>\n                <table style = {table} cellpadding=\"10\">\n                    <thead style = {thead}>\n                        <tr>{getHeader(data)}</tr>\n                    </thead>\n                    <tbody style = {tbody}>\n                        {getRowsData(data)}\n                    </tbody>\n                </table>\n            </div>);\n        }, 1);\n        return <h1>loading...</h1>\n\n    }\n    \n\n    \n    \n\n    return (\n        result\n    );\n}"]},"metadata":{},"sourceType":"module"}