{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Models(props) {\n  _s();\n\n  const [modelsList, setModelsList] = useState([]);\n  const [currentModel, setCurrentModel] = useState();\n  useEffect(() => fetch('/api/models').then(respone => respone.json()).then(json => setModelsList(json)));\n\n  const getBackgroundColor = status => status === 'ready' ? 'green' : 'red';\n\n  const getBorderColor = modelId => {\n    //let x = (modelId == currentModel ? 'black' : null);\n    return 'black';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: modelsList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: {\n        listStyleType: 'none'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: getBackgroundColor(item.status),\n          padding: 20,\n          width: 250,\n          height: 50,\n          border: 20,\n          borderRadius: 25,\n          borderColor: 'blue',\n          borderStyle: 'solid'\n        },\n        onClick: () => {\n          props.onModelSelect();\n          setCurrentModel(item.modelId);\n        },\n        children: [item.uploadTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), item.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Models, \"urV5NAG8nIi3u1zx0NUDDFq1qMA=\");\n\n_c = Models;\nexport default Models;\n\nvar _c;\n\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","Models","props","modelsList","setModelsList","currentModel","setCurrentModel","fetch","then","respone","json","getBackgroundColor","status","getBorderColor","modelId","map","item","listStyleType","backgroundColor","padding","width","height","border","borderRadius","borderColor","borderStyle","onModelSelect","uploadTime"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAMO,KAAK,CAAC,aAAD,CAAL,CACXC,IADW,CACNC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADL,EAEXF,IAFW,CAENE,IAAI,IAAIN,aAAa,CAACM,IAAD,CAFf,CAAP,CAAT;;AAIA,QAAMC,kBAAkB,GAAGC,MAAM,IAAKA,MAAM,KAAK,OAAX,GAAqB,OAArB,GAA+B,KAArE;;AACA,QAAMC,cAAc,GAAGC,OAAO,IAAI;AAC9B;AACA,WAAO,OAAP;AACH,GAHD;;AAKA,sBACI;AAAA,cACCX,UAAU,CAACY,GAAX,CAAeC,IAAI,iBAChB;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAX;AAAA,8BACI;AACA,QAAA,KAAK,EAAE;AACHC,UAAAA,eAAe,EAAEP,kBAAkB,CAACK,IAAI,CAACJ,MAAN,CADhC;AAEHO,UAAAA,OAAO,EAAE,EAFN;AAGHC,UAAAA,KAAK,EAAE,GAHJ;AAIHC,UAAAA,MAAM,EAAE,EAJL;AAKHC,UAAAA,MAAM,EAAE,EALL;AAMHC,UAAAA,YAAY,EAAE,EANX;AAOHC,UAAAA,WAAW,EAAE,MAPV;AAQHC,UAAAA,WAAW,EAAE;AARV,SADP;AAUA,QAAA,OAAO,EAAE,MAAM;AACXvB,UAAAA,KAAK,CAACwB,aAAN;AACApB,UAAAA,eAAe,CAACU,IAAI,CAACF,OAAN,CAAf;AACH,SAbD;AAAA,mBAcKE,IAAI,CAACW,UAdV,eAeQ;AAAA;AAAA;AAAA;AAAA,gBAfR,EAgBKX,IAAI,CAACJ,MAhBV;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBI;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GA1CQX,M;;KAAAA,M;AA4CT,eAAeA,MAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nfunction Models(props) {\n\n    const [modelsList, setModelsList] = useState([]);\n    const [currentModel, setCurrentModel] = useState();\n\n    useEffect(() => fetch('/api/models')\n        .then(respone => respone.json())\n        .then(json => setModelsList(json)));\n    \n    const getBackgroundColor = status => (status === 'ready' ? 'green' : 'red');\n    const getBorderColor = modelId => {\n        //let x = (modelId == currentModel ? 'black' : null);\n        return 'black';\n    };\n\n    return (\n        <div>\n        {modelsList.map(item => (\n            <li style={{listStyleType: 'none'}}>\n                <div\n                style={{\n                    backgroundColor: getBackgroundColor(item.status),\n                    padding: 20,\n                    width: 250,\n                    height: 50,\n                    border: 20, \n                    borderRadius: 25,\n                    borderColor: 'blue',\n                    borderStyle: 'solid',}}\n                onClick={() => {\n                    props.onModelSelect();\n                    setCurrentModel(item.modelId);\n                }}>\n                    {item.uploadTime}\n                        <br />\n                    {item.status}\n                </div>\n                <br />\n            </li>\n        ))}\n        </div>\n    )\n}\n\nexport default Models"]},"metadata":{},"sourceType":"module"}