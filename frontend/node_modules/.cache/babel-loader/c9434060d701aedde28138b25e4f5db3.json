{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/FileUploadPanel.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport AnomalyFileUploadBox from './AnomalyFileUploadBox';\nimport TrainingFileUploadBox from './TrainingFileUploadBox';\nimport Switch from '@material-ui/core/Switch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUploadPanel(props) {\n  _s();\n\n  const [currentMode, setCurrentMode] = useState(0);\n  /*\n      if (currentMode === 'Model training') {\n          \n      }\n      <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n          <Switch\n            edge=\"end\"\n            onChange={() => setCurrentMode((currentMode + 1) % 2)}\n          />\n  \n      <AnomalyFileUploadBox onUpload={file => \n          convertCSVToJSON(file).then(json => {\n              fetch('/api/anomaly?model_id=' + currentModelId, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify(json)\n              }).then();\n              setCurrentFlightDataJSON(json);\n          })\n      } />\n  \n      <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n          <TrainingFileUploadBox onUpload={(file, algorithm) => \n          convertCSVToJSON(file)\n              .then(json => {\n              fetch('/api/model/' + algorithm, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify(json)\n              });\n              setCurrentFlightDataJSON(json);\n          })\n          } />\n      </div>\n  */\n\n  const x = /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '5%',\n      right: '2%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      edge: \"end\",\n      onChange: () => setCurrentMode((currentMode + 1) % 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 15\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: x\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FileUploadPanel, \"IoYKj/XlljtoYLEZ1UKiis82tNU=\");\n\n_c = FileUploadPanel;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUploadPanel\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/FileUploadPanel.js"],"names":["useState","AnomalyFileUploadBox","TrainingFileUploadBox","Switch","FileUploadPanel","props","currentMode","setCurrentMode","x","position","bottom","right"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC3C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,QAAMQ,CAAC,gBAAG;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE,IAA7B;AAAmCC,MAAAA,KAAK,EAAE;AAA1C,KAAZ;AAAA,2BACV,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,KADP;AAEE,MAAA,QAAQ,EAAE,MAAMJ,cAAc,CAAC,CAACD,WAAW,GAAG,CAAf,IAAoB,CAArB;AAFhC;AAAA;AAAA;AAAA;AAAA;AADU;AAAA;AAAA;AAAA;AAAA,UAAV;;AAMA,sBACI;AAAA,cACKE;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAhDuBJ,e;;KAAAA,e","sourcesContent":["import {useState} from 'react';\nimport AnomalyFileUploadBox from './AnomalyFileUploadBox';\nimport TrainingFileUploadBox from './TrainingFileUploadBox';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function FileUploadPanel(props) {\n    const [currentMode, setCurrentMode] = useState(0);\n/*\n    if (currentMode === 'Model training') {\n        \n    }\n    <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n        <Switch\n          edge=\"end\"\n          onChange={() => setCurrentMode((currentMode + 1) % 2)}\n        />\n\n    <AnomalyFileUploadBox onUpload={file => \n        convertCSVToJSON(file).then(json => {\n            fetch('/api/anomaly?model_id=' + currentModelId, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(json)\n            }).then();\n            setCurrentFlightDataJSON(json);\n        })\n    } />\n\n    <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n        <TrainingFileUploadBox onUpload={(file, algorithm) => \n        convertCSVToJSON(file)\n            .then(json => {\n            fetch('/api/model/' + algorithm, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(json)\n            });\n            setCurrentFlightDataJSON(json);\n        })\n        } />\n    </div>\n*/\n    const x = <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n    <Switch\n      edge=\"end\"\n      onChange={() => setCurrentMode((currentMode + 1) % 2)}\n    /></div>;\n\n    return (\n        <div>\n            {x}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}