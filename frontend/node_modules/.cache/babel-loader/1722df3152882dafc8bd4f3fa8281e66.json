{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getKeys = props => {\n  return props.data[0];\n};\n\nconst getHeader = props => {\n  var keys = getKeys(props);\n  return keys.map((key, index) => {\n    return /*#__PURE__*/_jsxDEV(\"th\", {\n      children: key.toUpperCase()\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 20\n    }, this);\n  });\n};\n\nconst RenderRow = row => {\n  return row.map((key, index) => {\n    return /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        backgroundColor: \"red\"\n      },\n      children: key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }, this);\n  });\n};\n\n_c = RenderRow;\n\nconst getRowsData = props => {\n  return props.data.slice(1).map((row, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: RenderRow(row)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 20\n    }, this);\n  });\n};\n\nexport default function Table(props) {\n  _s();\n\n  const [cellArray, setCellArray] = useState();\n  const table = {\n    borderRadius: \"30px\",\n    fontSize: \"20px\",\n    fontWeight: \"normal\",\n    border: \"none\",\n    borderCollapse: \"collapse\",\n    width: \"100%\",\n    maxWidth: \"100%\",\n    whiteSpace: \"nowrap\",\n    backgroundColor: \"white\",\n    borderSpacing: \"10px\",\n    textAlign: \"center\",\n    columnWidth: \"100px\"\n  };\n  const thead = {\n    color: \"#ffffff\",\n    background: \"#000000\"\n  };\n  const tbody = {\n    color: \"#000000\",\n    background: \"ffffff\"\n  };\n\n  if (props.data === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      style: table,\n      cellpadding: \"10\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: thead,\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: getHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        style: tbody,\n        children: getRowsData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Table, \"2s2d09Jn0JLrRxHK9WgkbFdOHPY=\");\n\n_c2 = Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderRow\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Table.js"],"names":["React","useState","getKeys","props","data","getHeader","keys","map","key","index","toUpperCase","RenderRow","row","backgroundColor","getRowsData","slice","Table","cellArray","setCellArray","table","borderRadius","fontSize","fontWeight","border","borderCollapse","width","maxWidth","whiteSpace","borderSpacing","textAlign","columnWidth","thead","color","background","tbody","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEI,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,SAAOA,KAAK,CAACC,IAAN,CAAW,CAAX,CAAP;AACH,CAFD;;AAIA,MAAMC,SAAS,GAAIF,KAAD,IAAW;AACzB,MAAIG,IAAI,GAAGJ,OAAO,CAACC,KAAD,CAAlB;AACA,SAAOG,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,wBAAO;AAAA,gBAAeD,GAAG,CAACE,WAAJ;AAAf,OAASF,GAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,CAAP;AAGH,CALD;;AAOA,MAAMG,SAAS,GAAIC,GAAD,IAAS;AACvB,SAAOA,GAAG,CAACL,GAAJ,CAAQ,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC3B,wBAAO;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,eAAe,EAAE;AAAlB,OAAX;AAAA,gBAAuCL;AAAvC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,CAAP;AAGH,CAJD;;KAAMG,S;;AAMN,MAAMG,WAAW,GAAIX,KAAD,IAAW;AAC3B,SAAOA,KAAK,CAACC,IAAN,CAAWW,KAAX,CAAiB,CAAjB,EAAoBR,GAApB,CAAwB,CAACK,GAAD,EAAMH,KAAN,KAAgB;AAC3C,wBAAO;AAAA,gBACFE,SAAS,CAACC,GAAD;AADP,OAASH,KAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH,GAJM,CAAP;AAKH,CAND;;AAQA,eAAe,SAASO,KAAT,CAAeb,KAAf,EAAsB;AAAA;;AAEjC,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,EAA1C;AAEA,QAAMkB,KAAK,GAAG;AACJC,IAAAA,YAAY,EAAE,MADV;AAEJC,IAAAA,QAAQ,EAAE,MAFN;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,MAAM,EAAE,MAJJ;AAKJC,IAAAA,cAAc,EAAE,UALZ;AAMJC,IAAAA,KAAK,EAAE,MANH;AAOJC,IAAAA,QAAQ,EAAE,MAPN;AAQJC,IAAAA,UAAU,EAAE,QARR;AASJd,IAAAA,eAAe,EAAE,OATb;AAUJe,IAAAA,aAAa,EAAE,MAVX;AAWJC,IAAAA,SAAS,EAAE,QAXP;AAYJC,IAAAA,WAAW,EAAE;AAZT,GAAd;AAcA,QAAMC,KAAK,GAAG;AACHC,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,UAAU,EAAE;AAFT,GAAd;AAIA,QAAMC,KAAK,GAAG;AACHF,IAAAA,KAAK,EAAE,SADJ;AAEHC,IAAAA,UAAU,EAAE;AAFT,GAAd;;AAKA,MAAI9B,KAAK,CAACC,IAAN,KAAe+B,SAAnB,EAA8B;AAC1B,WAAQ,IAAR;AACH;;AAED,sBACI;AAAA,2BACI;AAAO,MAAA,KAAK,EAAIhB,KAAhB;AAAuB,MAAA,WAAW,EAAC,IAAnC;AAAA,8BACI;AAAO,QAAA,KAAK,EAAIY,KAAhB;AAAA,+BACI;AAAA,oBAAK1B,SAAS;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,KAAK,EAAI6B,KAAhB;AAAA,kBACKpB,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA3CuBE,K;;MAAAA,K","sourcesContent":["import React from 'react'\nimport {useState} from 'react'\n\n    const getKeys = (props) => {\n        return props.data[0];\n    }\n\n    const getHeader = (props) => {\n        var keys = getKeys(props);\n        return keys.map((key, index) => {\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n\n    const RenderRow = (row) => {\n        return row.map((key, index) => {\n            return <td style={{backgroundColor: \"red\"}} >{key}</td>\n        })\n    }\n\n    const getRowsData = (props) => {\n        return props.data.slice(1).map((row, index) => {\n            return <tr key={index}>\n                {RenderRow(row)}\n            </tr>\n        })\n    }\n\n    export default function Table(props) {\n\n        const [cellArray, setCellArray] = useState();\n\n        const table = {\n                  borderRadius: \"30px\",\n                  fontSize: \"20px\",\n                  fontWeight: \"normal\",\n                  border: \"none\",\n                  borderCollapse: \"collapse\",\n                  width: \"100%\",\n                  maxWidth: \"100%\",\n                  whiteSpace: \"nowrap\",\n                  backgroundColor: \"white\",\n                  borderSpacing: \"10px\",\n                  textAlign: \"center\",\n                  columnWidth: \"100px\"\n              };\n        const thead = {\n                   color: \"#ffffff\",\n                   background: \"#000000\",\n               };\n        const tbody = {\n                   color: \"#000000\",\n                   background: \"ffffff\",\n               };\n\n        if (props.data === undefined) {\n            return (null);\n        }\n\n        return (\n            <div>\n                <table style = {table} cellpadding=\"10\">\n                    <thead style = {thead}>\n                        <tr>{getHeader()}</tr>\n                    </thead>\n                    <tbody style = {tbody}>\n                        {getRowsData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n"]},"metadata":{},"sourceType":"module"}