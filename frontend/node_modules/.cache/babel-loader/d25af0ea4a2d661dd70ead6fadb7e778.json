{"ast":null,"code":"const convertToJSON = file => {\n  var reader = new FileReader();\n\n  reader.onload = () => {\n    var lines = reader.result.split(\"\\n\");\n    var result = [];\n    var headers = lines[0].split(\",\");\n\n    for (var i = 1; i < lines.length; ++i) {\n      var obj = {};\n      var currentline = lines[i].split(\",\");\n\n      for (var j = 0; j < headers.length; ++j) {\n        obj[headers[j]] = currentline[j];\n      }\n\n      result.push(obj);\n    }\n\n    return JSON.stringify(result);\n  };\n\n  reader.readAsText(file);\n};","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/utils.js"],"names":["convertToJSON","file","reader","FileReader","onload","lines","result","split","headers","i","length","obj","currentline","j","push","JSON","stringify","readAsText"],"mappings":"AAAA,MAAMA,aAAa,GAAGC,IAAI,IAAI;AAC1B,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAM;AACpB,QAAIC,KAAK,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoB,IAApB,CAAZ;AACA,QAAID,MAAM,GAAG,EAAb;AAEA,QAAIE,OAAO,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASE,KAAT,CAAe,GAAf,CAAd;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkC,EAAED,CAApC,EAAsC;AAEpC,UAAIE,GAAG,GAAG,EAAV;AACA,UAAIC,WAAW,GAAGP,KAAK,CAACI,CAAD,CAAL,CAASF,KAAT,CAAe,GAAf,CAAlB;;AAEA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,OAAO,CAACE,MAA5B,EAAoC,EAAEG,CAAtC,EAAyC;AACvCF,QAAAA,GAAG,CAACH,OAAO,CAACK,CAAD,CAAR,CAAH,GAAkBD,WAAW,CAACC,CAAD,CAA7B;AACD;;AAEDP,MAAAA,MAAM,CAACQ,IAAP,CAAYH,GAAZ;AACD;;AAED,WAAOI,IAAI,CAACC,SAAL,CAAeV,MAAf,CAAP;AACD,GAnBD;;AAqBAJ,EAAAA,MAAM,CAACe,UAAP,CAAkBhB,IAAlB;AACH,CAzBD","sourcesContent":["const convertToJSON = file => {\n    var reader = new FileReader();\n  \n    reader.onload = () => {\n      var lines = reader.result.split(\"\\n\");\n      var result = [];\n    \n      var headers = lines[0].split(\",\");\n    \n      for (var i = 1; i < lines.length; ++i){\n    \n        var obj = {};\n        var currentline = lines[i].split(\",\");\n    \n        for (var j = 0; j < headers.length; ++j) {\n          obj[headers[j]] = currentline[j];\n        }\n    \n        result.push(obj);\n      }\n  \n      return JSON.stringify(result);\n    }\n  \n    reader.readAsText(file);\n}"]},"metadata":{},"sourceType":"module"}