{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function Models(props) {\n  _s();\n\n  const [modelsList, setModelsList] = useState([]);\n  const [currentModel, setCurrentModel] = useState();\n  const classes = useStyles();\n  useEffect(() => fetch('/api/models').then(respone => respone.json()).then(json => setModelsList(json)));\n\n  const getBackgroundColor = status => status === 'ready' ? 'green' : 'red';\n\n  const getBorderColor = modelId => modelId === currentModel ? 'black' : 'white';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n      height: 500,\n      width: 300,\n      itemSize: 130,\n      itemCount: modelsList.length,\n      children: itemProps => {\n        const {\n          index,\n          style\n        } = itemProps;\n        const model = modelsList[index];\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          style: style,\n          onClick: () => setCurrentModel(model.modelId),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Model ID: ${model.modelId}\\nUpload time: ${model.uploadTime}\\nStatus: ${model.status}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Models, \"zSXjjmQ9yQJc7rDf5xw5lP2vTHg=\", false, function () {\n  return [useStyles];\n});\n\n_c = Models;\n\nvar _c;\n\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","ListItem","ListItemText","FixedSizeList","Typography","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","Models","props","modelsList","setModelsList","currentModel","setCurrentModel","classes","fetch","then","respone","json","getBackgroundColor","status","getBorderColor","modelId","length","itemProps","index","style","model","uploadTime"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,SAAS,GAAGC,UAAU,CAAEC,KAAD,KAAY;AACxCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,QAAQ,EAAE,GAFN;AAGJC,IAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,UAAd,CAAyBC;AAHtC;AADkC,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,EAAhD;AAEA,QAAMsB,OAAO,GAAGhB,SAAS,EAAzB;AAEAL,EAAAA,SAAS,CAAC,MAAMsB,KAAK,CAAC,aAAD,CAAL,CACXC,IADW,CACNC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADL,EAEXF,IAFW,CAENE,IAAI,IAAIP,aAAa,CAACO,IAAD,CAFf,CAAP,CAAT;;AAIA,QAAMC,kBAAkB,GAAGC,MAAM,IAAKA,MAAM,KAAK,OAAX,GAAqB,OAArB,GAA+B,KAArE;;AACA,QAAMC,cAAc,GAAGC,OAAO,IAAKA,OAAO,KAAKV,YAAZ,GAA2B,OAA3B,GAAqC,OAAxE;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEE,OAAhB;AAAA,2BACA,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,GAAvB;AAA4B,MAAA,KAAK,EAAE,GAAnC;AAAwC,MAAA,QAAQ,EAAE,GAAlD;AAAuD,MAAA,SAAS,EAAEJ,UAAU,CAACa,MAA7E;AAAA,gBACKC,SAAS,IAAI;AACV,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBF,SAAzB;AACA,cAAMG,KAAK,GAAGjB,UAAU,CAACe,KAAD,CAAxB;AAEA,4BACI,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,KAAK,EAAEC,KAAxB;AAA2C,UAAA,OAAO,EAAE,MAAMb,eAAe,CAACc,KAAK,CAACL,OAAP,CAAzE;AAAA,iCACI,QAAC,YAAD;AAAc,YAAA,OAAO,EAAG,aAAYK,KAAK,CAACL,OAAQ,kBAAiBK,KAAK,CAACC,UAAW,aAAYD,KAAK,CAACP,MAAO;AAA7G;AAAA;AAAA;AAAA;AAAA;AADJ,WAAoCK,KAApC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH;AAVL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAhCuBjB,M;UAKJV,S;;;KALIU,M","sourcesContent":["import {useState, useEffect} from 'react'\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t  width: '100%',\n\t  maxWidth: 360,\n\t  backgroundColor: theme.palette.background.paper,\n\t},\n}));\n\nexport default function Models(props) {\n\n    const [modelsList, setModelsList] = useState([]);\n    const [currentModel, setCurrentModel] = useState();\n\n    const classes = useStyles();\n\n    useEffect(() => fetch('/api/models')\n        .then(respone => respone.json())\n        .then(json => setModelsList(json)));\n    \n    const getBackgroundColor = status => (status === 'ready' ? 'green' : 'red');\n    const getBorderColor = modelId => (modelId === currentModel ? 'black' : 'white');\n\n    return (\n        <div className={classes}>\n        <FixedSizeList height={500} width={300} itemSize={130} itemCount={modelsList.length}>\n            {itemProps => {\n                const { index, style } = itemProps;\n                const model = modelsList[index];\n            \n                return (\n                    <ListItem button style={style} key={index} onClick={() => setCurrentModel(model.modelId)}>\n                        <ListItemText primary={`Model ID: ${model.modelId}\\nUpload time: ${model.uploadTime}\\nStatus: ${model.status}`} />\n                    </ListItem>\n                );\n            }}\n        </FixedSizeList>\n       \n        \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}