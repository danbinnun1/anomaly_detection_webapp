{"ast":null,"code":"import _toConsumableArray from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import Typography from'@material-ui/core/Typography';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import{FixedSizeList}from'react-window';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Models(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),modelsList=_useState2[0],setModelsList=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),selectedIndex=_useState4[0],setSelectedIndex=_useState4[1];useEffect(function(){return fetch('/api/models').then(function(response){return response.json();}).then(function(json){setModelsList(json);if(selectedIndex===undefined&&json.length>0){setSelectedIndex(0);props.onModelSelect(json[0].modelId);}});},_toConsumableArray(props.dependency));return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(FixedSizeList,{height:500,width:250,itemSize:130,itemCount:modelsList.length,children:function children(itemProps){var index=itemProps.index,style=itemProps.style;var model=modelsList[index];return/*#__PURE__*/_jsx(ListItem,{button:true,selected:selectedIndex===index,style:Object.assign({},style,{'borderColor':model.status==='ready'?'green':'red'}),onClick:function onClick(){if(model.status==='ready'){setSelectedIndex(index);props.onModelSelect(model.modelId);}},children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Typography,{variant:\"h10\",style:{color:model.status==='ready'?'green':'red'},children:[\"Model ID: \",model.modelId,/*#__PURE__*/_jsx(\"br\",{}),\"Upload time: \",model.uploadTime,/*#__PURE__*/_jsx(\"br\",{}),\"Status: \",model.status]})})},index);}})});}","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","Typography","ListItem","ListItemText","FixedSizeList","Models","props","modelsList","setModelsList","selectedIndex","setSelectedIndex","fetch","then","response","json","undefined","length","onModelSelect","modelId","dependency","itemProps","index","style","model","Object","assign","status","color","uploadTime"],"mappings":"sWAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,OAASC,aAAT,KAA8B,cAA9B,C,wFAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAClC,cAAoCP,QAAQ,CAAC,EAAD,CAA5C,wCAAOQ,UAAP,eAAmBC,aAAnB,eACA,eAA0CT,QAAQ,EAAlD,yCAAOU,aAAP,eAAsBC,gBAAtB,eAEAV,SAAS,CAAC,iBAAMW,CAAAA,KAAK,CAAC,aAAD,CAAL,CACXC,IADW,CACN,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADF,EAEXF,IAFW,CAEN,SAAAE,IAAI,CAAI,CACVN,aAAa,CAACM,IAAD,CAAb,CAEA,GAAIL,aAAa,GAAMM,SAAnB,EAAgCD,IAAI,CAACE,MAAL,CAAc,CAAlD,CAAqD,CACjDN,gBAAgB,CAAC,CAAD,CAAhB,CACAJ,KAAK,CAACW,aAAN,CAAoBH,IAAI,CAAC,CAAD,CAAJ,CAAQI,OAA5B,EACH,CACJ,CATW,CAAN,EAAD,oBASGZ,KAAK,CAACa,UATT,EAAT,CAWA,mBACI,kCACI,KAAC,aAAD,EAAe,MAAM,CAAE,GAAvB,CAA4B,KAAK,CAAE,GAAnC,CAAwC,QAAQ,CAAE,GAAlD,CAAuD,SAAS,CAAEZ,UAAU,CAACS,MAA7E,UACK,kBAAAI,SAAS,CAAI,CACV,GAAQC,CAAAA,KAAR,CAAyBD,SAAzB,CAAQC,KAAR,CAAeC,KAAf,CAAyBF,SAAzB,CAAeE,KAAf,CACA,GAAMC,CAAAA,KAAK,CAAGhB,UAAU,CAACc,KAAD,CAAxB,CAEA,mBACI,KAAC,QAAD,EAAU,MAAM,KAAhB,CAAiB,QAAQ,CAAEZ,aAAa,GAAKY,KAA7C,CACI,KAAK,CAAEG,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBH,KAAlB,CAAyB,CAAE,cAAeC,KAAK,CAACG,MAAN,GAAiB,OAAjB,CAA2B,OAA3B,CAAqC,KAAtD,CAAzB,CADX,CAEgB,OAAO,CAAE,kBAAM,CACvB,GAAIH,KAAK,CAACG,MAAN,GAAiB,OAArB,CAA8B,CAC1BhB,gBAAgB,CAACW,KAAD,CAAhB,CACAf,KAAK,CAACW,aAAN,CAAoBM,KAAK,CAACL,OAA1B,EACH,CACJ,CAPL,uBAQI,KAAC,YAAD,EAAc,OAAO,cAAE,MAAC,UAAD,EAAY,OAAO,CAAC,KAApB,CAA0B,KAAK,CAAE,CAAES,KAAK,CAAEJ,KAAK,CAACG,MAAN,GAAiB,OAAjB,CAA2B,OAA3B,CAAqC,KAA9C,CAAjC,wBACRH,KAAK,CAACL,OADE,cAEf,aAFe,iBAGLK,KAAK,CAACK,UAHD,cAIf,aAJe,YAKVL,KAAK,CAACG,MALI,GAAvB,EARJ,EAESL,KAFT,CADJ,CAkBH,CAvBL,EADJ,EADJ,CA6BH","sourcesContent":["import { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\n\nexport default function Models(props) {\n    const [modelsList, setModelsList] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState();\n    \n    useEffect(() => fetch('/api/models')\n        .then(response => response.json())\n        .then(json => {\n            setModelsList(json);\n\n            if (selectedIndex  === undefined && json.length > 0) {\n                setSelectedIndex(0);\n                props.onModelSelect(json[0].modelId);\n            }\n        }), [...props.dependency]);\n\n    return (\n        <div>\n            <FixedSizeList height={500} width={250} itemSize={130} itemCount={modelsList.length}>\n                {itemProps => {\n                    const { index, style } = itemProps;\n                    const model = modelsList[index];\n\n                    return (\n                        <ListItem button selected={selectedIndex === index}\n                            style={Object.assign({}, style, { 'borderColor': model.status === 'ready' ? 'green' : 'red' })}\n                            key={index} onClick={() => {\n                                if (model.status === 'ready') {\n                                    setSelectedIndex(index);\n                                    props.onModelSelect(model.modelId);\n                                }\n                            }}>\n                            <ListItemText primary={<Typography variant=\"h10\" style={{ color: model.status === 'ready' ? 'green' : 'red' }}>\n                                Model ID: {model.modelId}\n                                    <br />\n                                Upload time: {model.uploadTime}\n                                    <br />\n                                Status: {model.status}\n                            </Typography>} />\n                        </ListItem>\n                    );\n                }}\n            </FixedSizeList>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}