{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Graphs.js\";\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dat = {\n  labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n  datasets: [{\n    label: \"First dataset\",\n    data: [33, 53, 85, 41, 44, 65],\n    fill: false,\n    borderColor: '#' + Math.floor(Math.random() * 16777215).toString(16)\n  }, {\n    label: \"Second dataset\",\n    data: [33, 25, 35, 51, 54, 76],\n    fill: false,\n    borderColor: '#' + Math.floor(Math.random() * 16777215).toString(16)\n  }]\n};\nexport default function Graphs(props) {\n  if (props.data.length === 0) {\n    return 'Please enter a flight data file';\n  }\n\n  let state = {\n    labels: Array.from(Array(Object.values(props.data)[0].length).keys()),\n    datasets: []\n  };\n\n  for (const key in props.data) {\n    state.datasets.push({\n      label: key,\n      data: props.data[key],\n      fill: false,\n      borderColor: '#' + Math.floor(Math.random() * 16777215).toString(16)\n    });\n  }\n\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: dat,\n      options: {\n        title: {\n          display: true,\n          text: 'Average Rainfall per month',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n_c = Graphs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphs\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Graphs.js"],"names":["Line","dat","labels","datasets","label","data","fill","borderColor","Math","floor","random","toString","Graphs","props","length","state","Array","from","Object","values","keys","key","push","console","log","title","display","text","fontSize","legend","position"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACDC,IAAAA,KAAK,EAAE,eADN;AAEDC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFL;AAGDC,IAAAA,IAAI,EAAE,KAHL;AAIDC,IAAAA,WAAW,EAAE,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C;AAJhB,GADQ,EAOR;AACDP,IAAAA,KAAK,EAAE,gBADN;AAEDC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAFL;AAGDC,IAAAA,IAAI,EAAE,KAHL;AAIDC,IAAAA,WAAW,EAAE,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C;AAJhB,GAPQ;AAFC,CAAZ;AAkBA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrC,MAAIA,KAAK,CAACR,IAAN,CAAWS,MAAX,KAAsB,CAA1B,EAA6B;AAC5B,WAAO,iCAAP;AACA;;AAED,MAAIC,KAAK,GAAG;AACXb,IAAAA,MAAM,EAAEc,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACE,MAAM,CAACC,MAAP,CAAcN,KAAK,CAACR,IAApB,EAA0B,CAA1B,EAA6BS,MAA9B,CAAL,CAA2CM,IAA3C,EAAX,CADG;AAEXjB,IAAAA,QAAQ,EAAE;AAFC,GAAZ;;AAKA,OAAK,MAAMkB,GAAX,IAAkBR,KAAK,CAACR,IAAxB,EAA8B;AAC7BU,IAAAA,KAAK,CAACZ,QAAN,CAAemB,IAAf,CAAoB;AACnBlB,MAAAA,KAAK,EAAEiB,GADY;AAEnBhB,MAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAN,CAAWgB,GAAX,CAFa;AAGnBf,MAAAA,IAAI,EAAE,KAHa;AAInBC,MAAAA,WAAW,EAAE,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C;AAJA,KAApB;AAMA;;AACDY,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,sBACC;AAAA,2BACA,QAAC,IAAD;AACC,MAAA,IAAI,EAAEd,GADP;AAEC,MAAA,OAAO,EAAE;AACTwB,QAAAA,KAAK,EAAC;AACLC,UAAAA,OAAO,EAAC,IADH;AAELC,UAAAA,IAAI,EAAC,4BAFA;AAGLC,UAAAA,QAAQ,EAAC;AAHJ,SADG;AAMTC,QAAAA,MAAM,EAAC;AACNH,UAAAA,OAAO,EAAC,IADF;AAENI,UAAAA,QAAQ,EAAC;AAFH;AANE;AAFV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA;KArCuBlB,M","sourcesContent":["import {Line} from 'react-chartjs-2';\n\nconst dat = {\n\tlabels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n\tdatasets: [\n\t  {\n\t\tlabel: \"First dataset\",\n\t\tdata: [33, 53, 85, 41, 44, 65],\n\t\tfill: false,\n\t\tborderColor: '#'+Math.floor(Math.random()*16777215).toString(16)\n\t  },\n\t  {\n\t\tlabel: \"Second dataset\",\n\t\tdata: [33, 25, 35, 51, 54, 76],\n\t\tfill: false,\n\t\tborderColor: '#'+Math.floor(Math.random()*16777215).toString(16)\n\t  }\n\t]\n  };\n\nexport default function Graphs(props) {\n\tif (props.data.length === 0) {\n\t\treturn 'Please enter a flight data file';\n\t}\n\t\n\tlet state = {\n\t\tlabels: Array.from(Array(Object.values(props.data)[0].length).keys()),\n\t\tdatasets: []\n\t};\n\n\tfor (const key in props.data) {\n\t\tstate.datasets.push({\n\t\t\tlabel: key,\n\t\t\tdata: props.data[key],\n\t\t\tfill: false,\n\t\t\tborderColor: '#' + Math.floor(Math.random() * 16777215).toString(16)\n\t\t});\n\t}\n\tconsole.log(state);\n\treturn (\n\t\t<div>\n\t\t<Line\n\t\t\tdata={dat}\n\t\t\toptions={{\n\t\t\ttitle:{\n\t\t\t\tdisplay:true,\n\t\t\t\ttext:'Average Rainfall per month',\n\t\t\t\tfontSize:20\n\t\t\t},\n\t\t\tlegend:{\n\t\t\t\tdisplay:true,\n\t\t\t\tposition:'right'\n\t\t\t}\n\t\t\t}}\n\t\t/>\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}