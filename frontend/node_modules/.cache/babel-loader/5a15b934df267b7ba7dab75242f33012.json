{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Models(props) {\n  _s();\n\n  const [modelsList, setModelsList] = useState([]);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  useEffect(() => fetch('/api/models').then(response => response.json()).then(json => {\n    setModelsList(json); //setSelectedIndex(0);\n\n    props.onModelSelect(json[0].modelId);\n  }, [...props.dependency]));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n      height: 500,\n      width: 250,\n      itemSize: 130,\n      itemCount: modelsList.length,\n      children: itemProps => {\n        const {\n          index,\n          style\n        } = itemProps;\n        const model = modelsList[index];\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          selected: selectedIndex === index,\n          style: Object.assign({}, style, {\n            'borderColor': model.status === 'ready' ? 'green' : 'red'\n          }),\n          onClick: () => {\n            if (model.status === 'ready') {\n              setSelectedIndex(index);\n              props.onModelSelect(model.modelId);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h10\",\n              style: {\n                color: model.status === 'ready' ? 'green' : 'red'\n              },\n              children: [\"Model ID: \", model.modelId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this), \"Upload time: \", model.uploadTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), \"Status: \", model.status]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Models, \"D4GyuV5wyxTZy3aLkV2iaGAoUa4=\");\n\n_c = Models;\n\nvar _c;\n\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","Typography","ListItem","ListItemText","FixedSizeList","Models","props","modelsList","setModelsList","selectedIndex","setSelectedIndex","fetch","then","response","json","onModelSelect","modelId","dependency","length","itemProps","index","style","model","Object","assign","status","color","uploadTime"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,CAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAMW,KAAK,CAAC,aAAD,CAAL,CACXC,IADW,CACNC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADN,EAEXF,IAFW,CAENE,IAAI,IAAI;AACVN,IAAAA,aAAa,CAACM,IAAD,CAAb,CADU,CAEV;;AACAR,IAAAA,KAAK,CAACS,aAAN,CAAoBD,IAAI,CAAC,CAAD,CAAJ,CAAQE,OAA5B;AACH,GANW,EAMT,CAAC,GAAGV,KAAK,CAACW,UAAV,CANS,CAAP,CAAT;AAQA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,GAAvB;AAA4B,MAAA,KAAK,EAAE,GAAnC;AAAwC,MAAA,QAAQ,EAAE,GAAlD;AAAuD,MAAA,SAAS,EAAEV,UAAU,CAACW,MAA7E;AAAA,gBACKC,SAAS,IAAI;AACV,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBF,SAAzB;AACA,cAAMG,KAAK,GAAGf,UAAU,CAACa,KAAD,CAAxB;AAEA,4BACI,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,QAAQ,EAAEX,aAAa,KAAKW,KAA7C;AACI,UAAA,KAAK,EAAEG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAAE,2BAAeC,KAAK,CAACG,MAAN,KAAiB,OAAjB,GAA2B,OAA3B,GAAqC;AAAtD,WAAzB,CADX;AAEgB,UAAA,OAAO,EAAE,MAAM;AACvB,gBAAIH,KAAK,CAACG,MAAN,KAAiB,OAArB,EAA8B;AAC1Bf,cAAAA,gBAAgB,CAACU,KAAD,CAAhB;AACAd,cAAAA,KAAK,CAACS,aAAN,CAAoBO,KAAK,CAACN,OAA1B;AACH;AACJ,WAPL;AAAA,iCAQI,QAAC,YAAD;AAAc,YAAA,OAAO,eAAE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,KAApB;AAA0B,cAAA,KAAK,EAAE;AAAEU,gBAAAA,KAAK,EAAEJ,KAAK,CAACG,MAAN,KAAiB,OAAjB,GAA2B,OAA3B,GAAqC;AAA9C,eAAjC;AAAA,uCACRH,KAAK,CAACN,OADE,eAEf;AAAA;AAAA;AAAA;AAAA,sBAFe,mBAGLM,KAAK,CAACK,UAHD,eAIf;AAAA;AAAA;AAAA;AAAA,sBAJe,cAKVL,KAAK,CAACG,MALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AARJ,WAESL,KAFT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAkBH;AAvBL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA1CuBf,M;;KAAAA,M","sourcesContent":["import { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\n\nexport default function Models(props) {\n\n    const [modelsList, setModelsList] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState(0);\n    \n    useEffect(() => fetch('/api/models')\n        .then(response => response.json())\n        .then(json => {\n            setModelsList(json);\n            //setSelectedIndex(0);\n            props.onModelSelect(json[0].modelId);\n        }, [...props.dependency]));\n\n    return (\n        <div>\n            <FixedSizeList height={500} width={250} itemSize={130} itemCount={modelsList.length}>\n                {itemProps => {\n                    const { index, style } = itemProps;\n                    const model = modelsList[index];\n\n                    return (\n                        <ListItem button selected={selectedIndex === index}\n                            style={Object.assign({}, style, { 'borderColor': model.status === 'ready' ? 'green' : 'red' })}\n                            key={index} onClick={() => {\n                                if (model.status === 'ready') {\n                                    setSelectedIndex(index);\n                                    props.onModelSelect(model.modelId);\n                                }\n                            }}>\n                            <ListItemText primary={<Typography variant=\"h10\" style={{ color: model.status === 'ready' ? 'green' : 'red' }}>\n                                Model ID: {model.modelId}\n                                    <br />\n                                Upload time: {model.uploadTime}\n                                    <br />\n                                Status: {model.status}\n                            </Typography>} />\n                        </ListItem>\n                    );\n                }}\n            </FixedSizeList>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}