{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/TrainingFileUploadBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TrainingFileUploadBox(props) {\n  _s();\n\n  var [currentFileTrain, setCurrentFileTrain] = useState();\n  var [algorithm, setAlgorithm] = useState();\n  const [currentFileDetect, setCurrentFileDetect] = useState();\n\n  const changeHandler = event => {\n    setCurrentFileTrain(event.target.files[0]);\n    setCurrentFileDetect(event.target.files[0]);\n  };\n\n  const onSubmissionTrain = () => {\n    if (currentFileTrain !== undefined) {\n      props.onUpload(currentFileTrain, algorithm);\n      currentFileTrain = undefined;\n    } else {// there isnt a file to upload\n    }\n  };\n\n  const onSubmissionDetect = () => {\n    if (currentFileDetect !== undefined) {\n      props.onUploadDetect(currentFileDetect);\n      setCurrentFileDetect(undefined);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: event => setAlgorithm(event.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"regression\",\n        name: \"algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), \"regression\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: \"hybrid\",\n        name: \"algorithm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \"hybrid\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form-group files\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        onChange: changeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmissionTrain,\n        children: \"train\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmissionDetect,\n        children: \"detect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TrainingFileUploadBox, \"YRPKoSIifn7uuERKmH6fRpS1buA=\");\n\n_c = TrainingFileUploadBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrainingFileUploadBox\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/TrainingFileUploadBox.js"],"names":["React","useState","TrainingFileUploadBox","props","currentFileTrain","setCurrentFileTrain","algorithm","setAlgorithm","currentFileDetect","setCurrentFileDetect","changeHandler","event","target","files","onSubmissionTrain","undefined","onUpload","onSubmissionDetect","onUploadDetect","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AACjD,MAAI,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CJ,QAAQ,EAAtD;AACA,MAAI,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,EAAxC;AACA,QAAM,CAACO,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,EAA1D;;AAGA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC7BN,IAAAA,mBAAmB,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAnB;AACAJ,IAAAA,oBAAoB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAApB;AACH,GAHD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIV,gBAAgB,KAAKW,SAAzB,EAAoC;AAChCZ,MAAAA,KAAK,CAACa,QAAN,CAAeZ,gBAAf,EAAiCE,SAAjC;AACAF,MAAAA,gBAAgB,GAAGW,SAAnB;AACH,KAHD,MAIK,CACD;AACH;AACJ,GARD;;AAUA,QAAME,kBAAkB,GAAG,MAAM;AAC7B,QAAIT,iBAAiB,KAAKO,SAA1B,EAAqC;AACjCZ,MAAAA,KAAK,CAACe,cAAN,CAAqBV,iBAArB;AACAC,MAAAA,oBAAoB,CAACM,SAAD,CAApB;AACH;AACJ,GALD;;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,QAAQ,EAAEJ,KAAK,IAAIJ,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaO,KAAd,CAApC;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,YAA1B;AAAuC,QAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cADJ,6BAEI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,QAA1B;AAAmC,QAAA,IAAI,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA,6BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,QAAQ,EAAET;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEI,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA3CuBf,qB;;KAAAA,qB","sourcesContent":["import React, { useState } from 'react'\n\n\nexport default function TrainingFileUploadBox(props) {\n    var [currentFileTrain, setCurrentFileTrain] = useState();\n    var [algorithm, setAlgorithm] = useState();\n    const [currentFileDetect, setCurrentFileDetect] = useState();\n\n\n    const changeHandler = (event) => {\n        setCurrentFileTrain(event.target.files[0]);\n        setCurrentFileDetect(event.target.files[0]);\n    }\n    const onSubmissionTrain = () => {\n        if (currentFileTrain !== undefined) {\n            props.onUpload(currentFileTrain, algorithm);\n            currentFileTrain = undefined;\n        }\n        else {\n            // there isnt a file to upload\n        }\n    }\n\n    const onSubmissionDetect = () => {\n        if (currentFileDetect !== undefined) {\n            props.onUploadDetect(currentFileDetect);\n            setCurrentFileDetect(undefined);\n        }\n    };\n    \n\n    return (\n        <div>\n            <div onChange={event => setAlgorithm(event.target.value)}>\n                <input type=\"radio\" value=\"regression\" name=\"algorithm\" />regression\n                <input type=\"radio\" value=\"hybrid\" name=\"algorithm\" />hybrid\n            </div>\n            <div class=\"form-group files\">\n                <input type=\"file\" name=\"file\" onChange={changeHandler} />\n            </div>\n            <div>\n                <button onClick={onSubmissionTrain}>train</button>\n                <button onClick={onSubmissionDetect}>detect</button>\n            </div>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}