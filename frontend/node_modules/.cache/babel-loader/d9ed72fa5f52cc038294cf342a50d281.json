{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport AnomalyPanel from './AnomalyPanel';\nimport ModelTrainingPanel from './ModelTrainingPanel';\nimport { convertCSVToJSON, convertJSONToLines } from './utils';\nimport Graphs from './Graphs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentModelId, setCurrentModelId] = useState();\n  const [flightDataJSON, setFlightDataJSON] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AnomalyFileUploadBox, {\n      onUpload: file => {\n        convertCSVToJSON(file).then(json => {\n          fetch('/api/anomaly?model_id=' + currentModelId, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: json\n          });\n          setFlightDataJSON(json);\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        width: '80%',\n        height: '30%',\n        overflowY: 'scroll',\n        bottom: '0%',\n        right: '18%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: convertJSONToLines(flightDataJSON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModelTrainingPanel, {\n      onModelSelect: modelId => {\n        setCurrentModelId(modelId);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xx/oaQP2jmMkCqMc3Y0jAN0IRjM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["useState","AnomalyPanel","ModelTrainingPanel","convertCSVToJSON","convertJSONToLines","Graphs","App","currentModelId","setCurrentModelId","flightDataJSON","setFlightDataJSON","file","then","json","fetch","method","headers","body","position","width","height","overflowY","bottom","right","modelId"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAAQC,gBAAR,EAA0BC,kBAA1B,QAAmD,SAAnD;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,EAApD;AAEA,sBACE;AAAA,4BACE,QAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAEW,IAAI,IAAI;AACpCR,QAAAA,gBAAgB,CAACQ,IAAD,CAAhB,CAAuBC,IAAvB,CAA4BC,IAAI,IAAI;AAChCC,UAAAA,KAAK,CAAC,2BAA2BP,cAA5B,EAA4C;AAC7CQ,YAAAA,MAAM,EAAE,MADqC;AAE7CC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFoC;AAG7CC,YAAAA,IAAI,EAAEJ;AAHuC,WAA5C,CAAL;AAKAH,UAAAA,iBAAiB,CAACG,IAAD,CAAjB;AACD,SAPH;AAQH;AATD;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE,KAA5B;AAAmCC,QAAAA,MAAM,EAAE,KAA3C;AAAkDC,QAAAA,SAAS,EAAE,QAA7D;AAAwEC,QAAAA,MAAM,EAAE,IAAhF;AAAsFC,QAAAA,KAAK,EAAE;AAA7F,OAAZ;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEnB,kBAAkB,CAACK,cAAD;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE,QAAC,kBAAD;AAAoB,MAAA,aAAa,EAAEe,OAAO,IAAI;AAC5ChB,QAAAA,iBAAiB,CAACgB,OAAD,CAAjB;AAA2B;AAD7B;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1BQlB,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport AnomalyPanel from './AnomalyPanel'\nimport ModelTrainingPanel from './ModelTrainingPanel'\nimport {convertCSVToJSON, convertJSONToLines} from './utils'\nimport Graphs from './Graphs'\n\nfunction App() {\n\n  const [currentModelId, setCurrentModelId] = useState();\n  const [flightDataJSON, setFlightDataJSON] = useState();\n\n  return (\n    <div>\n      <AnomalyFileUploadBox onUpload={file => {\n          convertCSVToJSON(file).then(json => {\n              fetch('/api/anomaly?model_id=' + currentModelId, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: json\n              });\n              setFlightDataJSON(json);\n            });\n      }} />\n\n      <div style={{ position: 'fixed', width: '80%', height: '30%', overflowY: 'scroll',  bottom: '0%', right: '18%' }}>\n          <Table data={convertJSONToLines(flightDataJSON)} />\n      </div>\n\n      <ModelTrainingPanel onModelSelect={modelId => {\n        setCurrentModelId(modelId)}} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}