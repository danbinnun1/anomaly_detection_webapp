{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { convertCSVToJSON, convertJSONToLines } from './utils';\nimport Graphs from './Graphs';\nimport Table from './Table';\nimport Models from './Models';\nimport FileUploadPanel from './FileUploadPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [currentModelId, setCurrentModelId] = useState(0);\n  const [currentFlightDataJSON, setCurrentFlightDataJSON] = useState();\n  const [currentFlightDataAnomalies, setCurrentFlightDataAnomalies] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        width: '20%',\n        overflowY: 'scroll',\n        top: '5%',\n        bottom: '20%',\n        left: '83%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Models, {\n        onModelSelect: modelId => setCurrentModelId(modelId),\n        dependency: currentFlightDataJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        width: '62%',\n        top: '5%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Graphs, {\n        data: currentFlightDataJSON,\n        anomalies: currentFlightDataAnomalies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        width: '80%',\n        height: '30%',\n        overflowY: 'scroll',\n        bottom: '0%',\n        right: '18%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: convertJSONToLines(currentFlightDataJSON),\n        anomalies: currentFlightDataAnomalies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '5%',\n        right: '5%'\n      },\n      children: /*#__PURE__*/_jsxDEV(FileUploadPanel, {\n        onUploadTrain: (file, algorithm) => convertCSVToJSON(file).then(json => {\n          fetch('/api/model/' + algorithm, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(json)\n          });\n          setCurrentFlightDataJSON(json);\n        }),\n        onUploadAnomaly: async file => {\n          const json = await convertCSVToJSON(file);\n          const response = await fetch('/api/anomaly?model_id=' + currentModelId, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(json)\n          });\n          const anomalies = await response.json();\n          setCurrentFlightDataAnomalies(anomalies.anomalies);\n          setCurrentFlightDataJSON(json);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jvCZphjQfq3eDU6l1Zk+DE/xKoc=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["useState","convertCSVToJSON","convertJSONToLines","Graphs","Table","Models","FileUploadPanel","App","currentModelId","setCurrentModelId","currentFlightDataJSON","setCurrentFlightDataJSON","currentFlightDataAnomalies","setCurrentFlightDataAnomalies","position","width","overflowY","top","bottom","left","modelId","height","right","file","algorithm","then","json","fetch","method","headers","body","JSON","stringify","response","anomalies"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { convertCSVToJSON, convertJSONToLines } from './utils';\nimport Graphs from './Graphs';\nimport Table from './Table';\nimport Models from './Models';\nimport FileUploadPanel from './FileUploadPanel';\n\nexport default function App() {\n\n  const [currentModelId, setCurrentModelId] = useState(0);\n  const [currentFlightDataJSON, setCurrentFlightDataJSON] = useState();\n  const [currentFlightDataAnomalies, setCurrentFlightDataAnomalies] = useState();\n\n  return (\n    <div>\n      <div style={{ position: 'fixed', width: '20%', overflowY: 'scroll', top: '5%', bottom: '20%', left: '83%' }}>\n          <Models onModelSelect={modelId => setCurrentModelId(modelId)} dependency={currentFlightDataJSON} />\n      </div>\n\n      <div style={{ position: 'fixed', width: '62%', top: '5%' }}>\n        <Graphs data={currentFlightDataJSON} anomalies={currentFlightDataAnomalies} />\n      </div>\n\n      <div style={{ position: 'fixed', width: '80%', height: '30%', overflowY: 'scroll', bottom: '0%', right: '18%' }}>\n        <Table data={convertJSONToLines(currentFlightDataJSON)} anomalies={currentFlightDataAnomalies} />\n      </div>\n\n      <div style={{ position: 'fixed', bottom: '5%', right: '5%' }} >\n        <FileUploadPanel\n          onUploadTrain={(file, algorithm) =>\n            convertCSVToJSON(file)\n              .then(json => {\n                fetch('/api/model/' + algorithm, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify(json)\n                });\n                setCurrentFlightDataJSON(json);\n              }\n            )}\n          onUploadAnomaly={async file => {\n            const json = await convertCSVToJSON(file);\n            const response = await fetch('/api/anomaly?model_id=' + currentModelId, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(json)\n            });\n            const anomalies = await response.json();\n            setCurrentFlightDataAnomalies(anomalies.anomalies);\n            setCurrentFlightDataJSON(json);\n          }}\n        />\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}