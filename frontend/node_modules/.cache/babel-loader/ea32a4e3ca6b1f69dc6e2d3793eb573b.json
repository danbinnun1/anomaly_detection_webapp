{"ast":null,"code":"import _regeneratorRuntime from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/yonatan/Projects/anomaly_detection_webapp/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import Graphs from'./Graphs';import Table from'./Table';import Models from'./Models';import FileUploadPanel from'./FileUploadPanel';import{convertCSVToJSON}from'./utils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function App(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),currentModelId=_useState2[0],setCurrentModelId=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),currentDataJSON=_useState4[0],setCurrentDataJSON=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),currentDataAnomalies=_useState6[0],setCurrentDataAnomalies=_useState6[1];return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',width:'20%',overflowY:'scroll',top:'5%',bottom:'20%',left:'83%'},children:/*#__PURE__*/_jsx(Models,{onModelSelect:function onModelSelect(modelId){setCurrentModelId(modelId);if(currentDataAnomalies!==undefined){fetch('/api/anomaly?model_id='+modelId,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(currentDataJSON)}).then(function(response){return response.json();}).then(function(anomalies){return setCurrentDataAnomalies(anomalies.anomalies);});}},dependency:[currentDataJSON]})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',width:'62%',top:'5%'},children:/*#__PURE__*/_jsx(Graphs,{data:currentDataJSON,anomalies:currentDataAnomalies})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',width:'80%',height:'30%',overflowY:'scroll',bottom:'0%',right:'18%'},children:/*#__PURE__*/_jsx(Table,{data:currentDataJSON,anomalies:currentDataAnomalies})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',bottom:'5%',right:'5%'},children:/*#__PURE__*/_jsx(FileUploadPanel,{onUploadTrain:/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file,algorithm){var json;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return convertCSVToJSON(file);case 2:json=_context.sent;fetch('/api/model/'+algorithm,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(json)});setCurrentDataJSON(json);setCurrentDataAnomalies(undefined);case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}(),onUploadAnomaly:/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file){var json,response,anomalies;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return convertCSVToJSON(file);case 2:json=_context2.sent;_context2.next=5;return fetch('/api/anomaly?model_id='+currentModelId,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(json)});case 5:response=_context2.sent;_context2.next=8;return response.json();case 8:anomalies=_context2.sent;setCurrentDataAnomalies(anomalies.anomalies);setCurrentDataJSON(json);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3){return _ref2.apply(this,arguments);};}()})})]});}","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["useState","Graphs","Table","Models","FileUploadPanel","convertCSVToJSON","App","currentModelId","setCurrentModelId","currentDataJSON","setCurrentDataJSON","currentDataAnomalies","setCurrentDataAnomalies","position","width","overflowY","top","bottom","left","modelId","undefined","fetch","method","headers","body","JSON","stringify","then","response","json","anomalies","height","right","file","algorithm"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Graphs from './Graphs';\nimport Table from './Table';\nimport Models from './Models';\nimport FileUploadPanel from './FileUploadPanel';\nimport { convertCSVToJSON } from './utils';\n\nexport default function App() {\n\n  const [currentModelId, setCurrentModelId] = useState(0);\n  const [currentDataJSON, setCurrentDataJSON] = useState();\n  const [currentDataAnomalies, setCurrentDataAnomalies] = useState();\n\n  return (\n    <div>\n      <div style={{ position: 'fixed', width: '20%', overflowY: 'scroll', top: '5%', bottom: '20%', left: '83%' }}>\n          <Models onModelSelect={modelId => {\n            setCurrentModelId(modelId);\n\n            if (currentDataAnomalies !== undefined) {\n              fetch('/api/anomaly?model_id=' + modelId, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(currentDataJSON)\n              })\n              .then(response => response.json())\n              .then(anomalies => setCurrentDataAnomalies(anomalies.anomalies));\n            }\n          }} \n          dependency={[currentDataJSON]} />\n      </div>\n\n      <div style={{ position: 'fixed', width: '62%', top: '5%' }}>\n        <Graphs data={currentDataJSON} anomalies={currentDataAnomalies} />\n      </div>\n\n      <div style={{ position: 'fixed', width: '80%', height: '30%', overflowY: 'scroll', bottom: '0%', right: '18%' }}>\n        <Table data={currentDataJSON} anomalies={currentDataAnomalies} />\n      </div>\n\n      <div style={{ position: 'fixed', bottom: '5%', right: '5%' }} >\n        <FileUploadPanel\n          onUploadTrain={async (file, algorithm) => {\n            const json = await convertCSVToJSON(file);\n            fetch('/api/model/' + algorithm, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(json)\n            });\n\n            setCurrentDataJSON(json);\n            setCurrentDataAnomalies(undefined);\n          }}\n          onUploadAnomaly={async file => {\n            const json = await convertCSVToJSON(file);\n            const response = await fetch('/api/anomaly?model_id=' + currentModelId, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify(json)\n            });\n            const anomalies = await response.json();\n\n            setCurrentDataAnomalies(anomalies.anomalies);\n            setCurrentDataJSON(json);\n          }}\n        />\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}