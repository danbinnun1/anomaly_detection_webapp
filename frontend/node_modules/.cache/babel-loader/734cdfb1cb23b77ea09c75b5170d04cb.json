{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { convertCSVToJSON, convertJSONToLines } from './utils';\nimport Graphs from './Graphs';\nimport Table from './Table';\nimport Models from './Models';\nimport TrainingFileUploadBox from \"./TrainingFileUploadBox\";\nimport AnomalyFileUploadBox from './AnomalyFileUploadBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentModelId, setCurrentModelId] = useState();\n  const [flightDataJSON, setFlightDataJSON] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AnomalyFileUploadBox, {\n      onUpload: file => convertCSVToJSON(file).then(json => {\n        /*fetch('/api/anomaly?model_id=' + currentModelId, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: json\n        });*/\n        setFlightDataJSON(json);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graphs, {\n      data: flightDataJSON\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        width: '80%',\n        height: '30%',\n        overflowY: 'scroll',\n        bottom: '0%',\n        right: '18%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        data: convertJSONToLines(flightDataJSON)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        width: '20%',\n        overflowY: 'scroll',\n        top: 10,\n        bottom: '20%',\n        left: '83%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Models, {\n        onModelSelect: modelId => {\n          setCurrentModelId(modelId);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '5%',\n        right: '2%'\n      },\n      children: /*#__PURE__*/_jsxDEV(TrainingFileUploadBox, {\n        onUpload: (file, algorithm) => convertCSVToJSON(file).then(json => {\n          fetch('/api/model/' + algorithm, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: json\n          });\n          setFlightDataJSON(json);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0Ji6hIuI0ar7x3v6QIgRtLbhNPo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["useState","convertCSVToJSON","convertJSONToLines","Graphs","Table","Models","TrainingFileUploadBox","AnomalyFileUploadBox","App","currentModelId","setCurrentModelId","flightDataJSON","setFlightDataJSON","file","then","json","position","width","height","overflowY","bottom","right","top","left","modelId","algorithm","fetch","method","headers","body"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,gBAAR,EAA0BC,kBAA1B,QAAmD,SAAnD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,qBAAP,MAAmC,yBAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,EAApD;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,EAAD,CAApD;AAEA,sBACE;AAAA,4BACE,QAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAEa,IAAI,IAClCZ,gBAAgB,CAACY,IAAD,CAAhB,CAAuBC,IAAvB,CAA4BC,IAAI,IAAI;AAClC;AACV;AACA;AACA;AACA;AACUH,QAAAA,iBAAiB,CAACG,IAAD,CAAjB;AACD,OAPD;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEJ;AAAd;AAAA;AAAA;AAAA;AAAA,YAZF,eAcE;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE,KAA5B;AAAmCC,QAAAA,MAAM,EAAE,KAA3C;AAAkDC,QAAAA,SAAS,EAAE,QAA7D;AAAwEC,QAAAA,MAAM,EAAE,IAAhF;AAAsFC,QAAAA,KAAK,EAAE;AAA7F,OAAZ;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEnB,kBAAkB,CAACS,cAAD;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAdF,eAkBE;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,KAAK,EAAE,KAA5B;AAAmCE,QAAAA,SAAS,EAAE,QAA9C;AAAwDG,QAAAA,GAAG,EAAE,EAA7D;AAAiEF,QAAAA,MAAM,EAAE,KAAzE;AAAgFG,QAAAA,IAAI,EAAE;AAAtF,OAAZ;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAEC,OAAO,IAAI;AAChCd,UAAAA,iBAAiB,CAACc,OAAD,CAAjB;AAA2B;AAD7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAlBF,eAuBE;AAAK,MAAA,KAAK,EAAE;AAAER,QAAAA,QAAQ,EAAE,OAAZ;AAAqBI,QAAAA,MAAM,EAAE,IAA7B;AAAmCC,QAAAA,KAAK,EAAE;AAA1C,OAAZ;AAAA,6BACI,QAAC,qBAAD;AAAuB,QAAA,QAAQ,EAAE,CAACR,IAAD,EAAOY,SAAP,KACjCxB,gBAAgB,CAACY,IAAD,CAAhB,CACKC,IADL,CACUC,IAAI,IAAI;AACZW,UAAAA,KAAK,CAAC,gBAAgBD,SAAjB,EAA4B;AAC/BE,YAAAA,MAAM,EAAE,MADuB;AAE/BC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFsB;AAG/BC,YAAAA,IAAI,EAAEd;AAHyB,WAA5B,CAAL;AAKFH,UAAAA,iBAAiB,CAACG,IAAD,CAAjB;AACD,SARH;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA5CQP,G;;KAAAA,G;AA8CT,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport {convertCSVToJSON, convertJSONToLines} from './utils'\nimport Graphs from './Graphs'\nimport Table from './Table';\nimport Models from './Models'\nimport TrainingFileUploadBox  from \"./TrainingFileUploadBox\";\nimport AnomalyFileUploadBox from './AnomalyFileUploadBox';\n\nfunction App() {\n\n  const [currentModelId, setCurrentModelId] = useState();\n  const [flightDataJSON, setFlightDataJSON] = useState([]);\n\n  return (\n    <div>\n      <AnomalyFileUploadBox onUpload={file => \n        convertCSVToJSON(file).then(json => {\n          /*fetch('/api/anomaly?model_id=' + currentModelId, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: json\n          });*/\n          setFlightDataJSON(json);\n        })\n      } />\n\n      <Graphs data={flightDataJSON} />\n\n      <div style={{ position: 'fixed', width: '80%', height: '30%', overflowY: 'scroll',  bottom: '0%', right: '18%' }}>\n          <Table data={convertJSONToLines(flightDataJSON)} />\n      </div>\n\n      <div style={{ position: 'fixed', width: '20%', overflowY: 'scroll', top: 10, bottom: '20%', left: '83%' }}>\n          <Models onModelSelect={modelId => {\n            setCurrentModelId(modelId)}}/>\n      </div>\n\n      <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n          <TrainingFileUploadBox onUpload={(file, algorithm) => \n          convertCSVToJSON(file)\n              .then(json => {\n                fetch('/api/model/' + algorithm, {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: json\n              });\n              setFlightDataJSON(json);\n            })\n          } />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}