{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Models from './Models';\nimport TrainingFileUploadBox from \"./TrainingFileUploadBox\";\nimport convertCSVToJSON, { splitCSV } from './utils';\nimport AnomalyFileUploadBox from './AnomalyFileUploadBox';\nimport Table from './Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      FlightDataTable: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AnomalyFileUploadBox, {\n        onUpload: file => splitCSV(file).then(lines => this.setState({\n          FlightDataTable: new Table({\n            data: lines\n          })\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          width: '80%',\n          height: '30%',\n          overflowY: 'scroll',\n          bottom: '0%',\n          right: '18%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          data: this.state.FlightDataTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          width: '20%',\n          overflowY: 'scroll',\n          top: 10,\n          bottom: '20%',\n          left: '83%'\n        },\n        children: /*#__PURE__*/_jsxDEV(Models, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          bottom: '5%',\n          right: '2%'\n        },\n        children: /*#__PURE__*/_jsxDEV(TrainingFileUploadBox, {\n          onUpload: (file, algorithm) => convertCSVToJSON(file).then(json => fetch(\"/api/model/\" + algorithm, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: json\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["React","Models","TrainingFileUploadBox","convertCSVToJSON","splitCSV","AnomalyFileUploadBox","Table","App","Component","constructor","props","state","FlightDataTable","render","file","then","lines","setState","data","position","width","height","overflowY","bottom","right","top","left","algorithm","json","fetch","method","headers","body"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,qBAAP,MAAmC,yBAAnC;AACA,OAAOC,gBAAP,IAA2BC,QAA3B,QAA2C,SAA3C;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE;AADN,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,oBAAD;AAAsB,QAAA,QAAQ,EAAEC,IAAI,IAAIV,QAAQ,CAACU,IAAD,CAAR,CACrCC,IADqC,CAChCC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEL,UAAAA,eAAe,EAAE,IAAIN,KAAJ,CAAU;AAACY,YAAAA,IAAI,EAAGF;AAAR,WAAV;AAAnB,SAAd,CADuB;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,KAAK,EAAE,KAA5B;AAAmCC,UAAAA,MAAM,EAAE,KAA3C;AAAkDC,UAAAA,SAAS,EAAE,QAA7D;AAAwEC,UAAAA,MAAM,EAAE,IAAhF;AAAsFC,UAAAA,KAAK,EAAE;AAA7F,SAAZ;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,KAAK,EAAE,KAA5B;AAAmCE,UAAAA,SAAS,EAAE,QAA9C;AAAwDG,UAAAA,GAAG,EAAE,EAA7D;AAAiEF,UAAAA,MAAM,EAAE,KAAzE;AAAgFG,UAAAA,IAAI,EAAE;AAAtF,SAAZ;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAYE;AAAK,QAAA,KAAK,EAAE;AAAEP,UAAAA,QAAQ,EAAE,OAAZ;AAAqBI,UAAAA,MAAM,EAAE,IAA7B;AAAmCC,UAAAA,KAAK,EAAE;AAA1C,SAAZ;AAAA,+BACE,QAAC,qBAAD;AAAuB,UAAA,QAAQ,EAAE,CAACV,IAAD,EAAOa,SAAP,KACjCxB,gBAAgB,CAACW,IAAD,CAAhB,CACGC,IADH,CACQa,IAAI,IAAIC,KAAK,CAAC,gBAAgBF,SAAjB,EAA4B;AAC7CG,YAAAA,MAAM,EAAE,MADqC;AAE7CC,YAAAA,OAAO,EAAE;AAAE,8BAAgB;AAAlB,aAFoC;AAG7CC,YAAAA,IAAI,EAAEJ;AAHuC,WAA5B,CADrB;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAnC+B;;AAsClC,eAAerB,GAAf","sourcesContent":["import './App.css';\nimport React from 'react'\nimport Models from './Models'\nimport TrainingFileUploadBox  from \"./TrainingFileUploadBox\";\nimport convertCSVToJSON, { splitCSV } from './utils'\nimport AnomalyFileUploadBox from './AnomalyFileUploadBox';\nimport Table from './Table';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      FlightDataTable: []\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <AnomalyFileUploadBox onUpload={file => splitCSV(file)\n          .then(lines => this.setState({ FlightDataTable: new Table({data : lines}) }))} />\n\n        <div style={{ position: 'fixed', width: '80%', height: '30%', overflowY: 'scroll',  bottom: '0%', right: '18%' }}>\n            <Table data={this.state.FlightDataTable} />\n        </div>\n\n        <div style={{ position: 'fixed', width: '20%', overflowY: 'scroll', top: 10, bottom: '20%', left: '83%' }}>\n          <Models />\n        </div>\n\n        <div style={{ position: 'fixed', bottom: '5%', right: '2%' }} >\n          <TrainingFileUploadBox onUpload={(file, algorithm) => \n          convertCSVToJSON(file)\n            .then(json => fetch(\"/api/model/\" + algorithm, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: json\n            }))} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}