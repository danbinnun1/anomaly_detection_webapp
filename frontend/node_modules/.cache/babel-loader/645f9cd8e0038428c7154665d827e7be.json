{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Models(props) {\n  _s();\n\n  const [modelsList, setModelsList] = useState([]);\n  const [currentModel, setCurrentModel] = useState();\n  useEffect(() => fetch('/api/models').then(respone => respone.json()).then(json => setModelsList(json)));\n\n  const getBackgroundColor = status => status === 'ready' ? 'green' : 'red';\n\n  const getBorderColor = modelId => modelId === currentModel ? 'black' : 'white';\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FixedSizeList, {\n      height: 500,\n      width: 300,\n      itemSize: 100,\n      itemCount: modelsList.length,\n      children: itemProps => {\n        const {\n          index,\n          style\n        } = itemProps;\n        const model = modelsList[index];\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          style: style,\n          onClick: () => setCurrentModel(model.modelId),\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Model ID: $\", model.modelId, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 87\n              }, this), \" Upload time: $\", model.uploadTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Models, \"urV5NAG8nIi3u1zx0NUDDFq1qMA=\");\n\n_c = Models;\n\nvar _c;\n\n$RefreshReg$(_c, \"Models\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js"],"names":["useState","useEffect","ListItem","ListItemText","FixedSizeList","Typography","Models","props","modelsList","setModelsList","currentModel","setCurrentModel","fetch","then","respone","json","getBackgroundColor","status","getBorderColor","modelId","length","itemProps","index","style","model","uploadTime"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAElC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAMW,KAAK,CAAC,aAAD,CAAL,CACXC,IADW,CACNC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADL,EAEXF,IAFW,CAENE,IAAI,IAAIN,aAAa,CAACM,IAAD,CAFf,CAAP,CAAT;;AAIA,QAAMC,kBAAkB,GAAGC,MAAM,IAAKA,MAAM,KAAK,OAAX,GAAqB,OAArB,GAA+B,KAArE;;AACA,QAAMC,cAAc,GAAGC,OAAO,IAAKA,OAAO,KAAKT,YAAZ,GAA2B,OAA3B,GAAqC,OAAxE;;AAEA,sBACI;AAAA,2BACA,QAAC,aAAD;AAAe,MAAA,MAAM,EAAE,GAAvB;AAA4B,MAAA,KAAK,EAAE,GAAnC;AAAwC,MAAA,QAAQ,EAAE,GAAlD;AAAuD,MAAA,SAAS,EAAEF,UAAU,CAACY,MAA7E;AAAA,gBACKC,SAAS,IAAI;AACV,cAAM;AAAEC,UAAAA,KAAF;AAASC,UAAAA;AAAT,YAAmBF,SAAzB;AACA,cAAMG,KAAK,GAAGhB,UAAU,CAACc,KAAD,CAAxB;AAEA,4BACI,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,KAAK,EAAEC,KAAxB;AAA2C,UAAA,OAAO,EAAE,MAAMZ,eAAe,CAACa,KAAK,CAACL,OAAP,CAAzE;AAAA,iCAEI,QAAC,YAAD;AAAc,YAAA,OAAO,eAAE,QAAC,UAAD;AAAA,wCAAwBK,KAAK,CAACL,OAA9B,oBAAuC;AAAA;AAAA;AAAA;AAAA,sBAAvC,qBAA6DK,KAAK,CAACC,UAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA;AAFJ,WAAoCH,KAApC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;AAZL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GAhCuBhB,M;;KAAAA,M","sourcesContent":["import {useState, useEffect} from 'react'\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\nimport { Typography } from '@material-ui/core';\n\nexport default function Models(props) {\n\n    const [modelsList, setModelsList] = useState([]);\n    const [currentModel, setCurrentModel] = useState();\n\n    useEffect(() => fetch('/api/models')\n        .then(respone => respone.json())\n        .then(json => setModelsList(json)));\n    \n    const getBackgroundColor = status => (status === 'ready' ? 'green' : 'red');\n    const getBorderColor = modelId => (modelId === currentModel ? 'black' : 'white');\n\n    return (\n        <div>\n        <FixedSizeList height={500} width={300} itemSize={100} itemCount={modelsList.length}>\n            {itemProps => {\n                const { index, style } = itemProps;\n                const model = modelsList[index];\n            \n                return (\n                    <ListItem button style={style} key={index} onClick={() => setCurrentModel(model.modelId)}>\n                        \n                        <ListItemText primary={<Typography>Model ID: ${model.modelId} <br /> Upload time: ${model.uploadTime}</Typography>} />\n                        \n                    </ListItem>\n                );\n            }}\n        </FixedSizeList>\n       \n        \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}