{"ast":null,"code":"var _jsxFileName = \"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport AnomalyPanel from './AnomalyPanel';\nimport ModelTrainingPanel from './ModelTrainingPanel';\nimport Graphs from './Graphs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentModelId, setCurrentModelId] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AnomalyPanel, {\n      modelId: currentModelId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModelTrainingPanel, {\n      onModelSelect: modelId => {\n        setCurrentModelId(modelId);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xQEHu/fi4emUpQg+ZSxdEir/4is=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js"],"names":["useState","AnomalyPanel","ModelTrainingPanel","Graphs","App","currentModelId","setCurrentModelId","modelId"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,EAApD;AAEA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,kBAAD;AAAoB,MAAA,aAAa,EAAEE,OAAO,IAAI;AAC5CD,QAAAA,iBAAiB,CAACC,OAAD,CAAjB;AAA2B;AAD7B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAZQH,G;;KAAAA,G;AAcT,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\nimport AnomalyPanel from './AnomalyPanel'\nimport ModelTrainingPanel from './ModelTrainingPanel'\nimport Graphs from './Graphs'\n\nfunction App() {\n\n  const [currentModelId, setCurrentModelId] = useState();\n\n  return (\n    <div>\n      <AnomalyPanel modelId={currentModelId} />\n      \n      <ModelTrainingPanel onModelSelect={modelId => {\n        setCurrentModelId(modelId)}} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}