[{"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/index.js":"1","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js":"2","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js":"3","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/utils.js":"4","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/AnomalyFileUploadBox.js":"5","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/TrainingFileUploadBox.js":"6","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Table.js":"7","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Graphs.js":"8","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/FileUploadPanel.js":"9"},{"size":197,"mtime":1622392351508,"results":"10","hashOfConfig":"11"},{"size":2564,"mtime":1622387735664,"results":"12","hashOfConfig":"11"},{"size":2361,"mtime":1622396845755,"results":"13","hashOfConfig":"11"},{"size":1150,"mtime":1622387751496,"results":"14","hashOfConfig":"11"},{"size":1664,"mtime":1622381656024,"results":"15","hashOfConfig":"11"},{"size":2044,"mtime":1622381656024,"results":"16","hashOfConfig":"11"},{"size":2457,"mtime":1622396969723,"results":"17","hashOfConfig":"11"},{"size":2933,"mtime":1622394826975,"results":"18","hashOfConfig":"11"},{"size":684,"mtime":1622374568467,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ydvq9o",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/index.js",[],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/App.js",[],["40","41"],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Models.js",["42","43"],"import { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { FixedSizeList } from 'react-window';\n\nexport default function Models(props) {\n    const [modelsList, setModelsList] = useState([]);\n    const [selectedIndex, setSelectedIndex] = useState();\n    \n    useEffect(() => fetch('/api/models')\n        .then(response => response.json())\n        .then(json => {\n            setModelsList(json);\n\n            if (selectedIndex  === undefined && json.length > 0) {\n                setSelectedIndex(0);\n                props.onModelSelect(json[0].modelId);\n            }\n        }), [...props.dependency]);\n\n    return (\n        <div>\n            <FixedSizeList height={500} width={250} itemSize={130} itemCount={modelsList.length}>\n                {itemProps => {\n                    const { index, style } = itemProps;\n                    const model = modelsList[index];\n\n                    return (\n                        <ListItem button selected={selectedIndex === index}\n                            style={Object.assign({}, style, {'borderColor': model.status === 'ready' ? 'green' : 'red' })}\n                            key={index} onClick={() => {\n                                if (model.status === 'ready') {\n                                    setSelectedIndex(index);\n                                    props.onModelSelect(model.modelId);\n                                }\n                            }}>\n                            <ListItemText primary={<Typography variant=\"h10\" style={{fontFamily:'sans-serif', fontSize:'130%', color: model.status === 'ready' ? 'green' : 'red' }}>\n                                Status: {model.status}\n                                    <br />\n                            </Typography>}\n                            secondary={\n                            <Typography style={{ color: 'black', fontFamily:'sans-serif', margin:'5%', fontSize:'80%' }}>\n                            Upload Time:\n                            <br/>\n                             {model.uploadTime}\n                            </Typography>}/>\n                        </ListItem>\n                    );\n                }}\n            </FixedSizeList>\n        </div>\n    )\n}\n","/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/utils.js",[],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/AnomalyFileUploadBox.js",[],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/TrainingFileUploadBox.js",[],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Table.js",[],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/Graphs.js",[],"/home/yonatan/Projects/anomaly_detection_webapp/frontend/src/FileUploadPanel.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":20,"column":13,"nodeType":"50","endLine":20,"endColumn":34,"suggestions":"51"},{"ruleId":"48","severity":1,"message":"52","line":20,"column":14,"nodeType":"53","endLine":20,"endColumn":33},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'selectedIndex'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["56"],"React Hook useEffect has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [props, selectedIndex]",{"range":"59","text":"60"},[739,760],"[props, selectedIndex]"]